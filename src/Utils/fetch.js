const m1 = [
  123.1, 123.1, 123.1, 123.1, 123.1, 123.1, 123.2, 123.3, 123.3, 123.3, 123.2,
  123.4, 123.4, 123.6, 123.6, 123.4, 123.4, 123.7, 123.6, 123.6, 123.6, 123.6,
  123.7, 123.6, 123.7, 123.6, 123.6, 123.6, 123.6, 123.6, 123.8, 123.6, 123.6,
  123.8, 123.7, 123.7, 123.9, 123.6, 123.7, 123.7, 123.7, 123.7, 123.7, 123.7,
  123.6, 123.6, 123.7, 123.7, 123.6, 123.5, 123.5, 123.4, 123.4, 123.3, 123.2,
  123.3, 123.2, 123.1, 122.9, 122.8, 122.6, 122.2, 121.9, 121.8, 122.2, 122.8,
  122.7, 122.9, 122.8, 122.5, 122.5, 122.4, 122.2, 122.2, 122.8, 122.9, 122.4,
  122.2, 122.4, 122.3, 122.3, 122.3, 122, 122.1, 121.7, 121.5, 121.6, 121.3,
  121.3, 121, 121.7, 121.5, 121.9, 121.7, 121.8, 121.6, 121.3, 121.3, 121.4,
  121, 121.1, 121, 120.7, 120.7, 120.5, 120.3, 120.4, 120.5, 120.3, 120.5,
  120.3, 120.7, 120.3, 120.4, 120.2, 120.2, 120.5, 120.2, 120.4, 119.8, 120.2,
  120.1, 120.1, 120.2, 120.1, 119.8, 119.9, 120, 119.7, 120.2, 120.1, 120.3,
  120.1, 120, 119.9, 120, 120.1, 120, 120, 119.7, 119.9, 120.1, 120.1, 119.8,
  119, 120.7, 120.9, 120.8, 118.3, 121.5, 120.7, 118.5, 121, 119.5, 121.1,
  120.9, 121.1, 121.2, 121.4, 121.9, 118.3, 121.6, 121.7, 121.8, 121.5, 121.8,
  121.5, 121.8, 119.9, 121.3, 121.7, 121.1, 121.5, 121.3, 121.3, 121.4, 121.4,
  121.3, 121.4, 121.5, 121.5, 121.3, 121.5, 121.6, 121.1, 121.6, 121.6, 121.9,
  121.7, 121.5, 121.7, 121.8, 121.8, 122.2, 122.2, 122.2, 122.2, 122.2, 122.2,
  122.3, 122.6, 122.8, 122.7, 122.6, 122.8, 122.9, 123.1, 123.1, 123.2, 123.2,
  122.2, 122.2, 122.2, 122.7, 122.1, 122, 122, 122.1, 122.2, 122.3, 122.8,
  122.5, 122.5, 122.8, 122.3, 122.3, 122.4, 122.3, 122.6, 122.4, 122.6, 122.6,
  122.6, 122.7, 122.4, 122.7, 122.7, 123, 123, 123.2, 123.1, 123.1, 123.2,
  123.2, 123.3, 123.6, 123.4, 123.4, 122.5, 122.5, 122.6, 121.1, 121.2, 121.7,
  121.6, 121.7, 121.8, 121.8, 122, 121.8, 122, 122.2, 122.1, 122.4, 122.6, 122,
  122.2, 122.4, 122.3, 122.6, 122.7, 122.7, 122.8, 122.8, 122.9, 122.9, 122.9,
  122.6, 122.6, 122.7, 122.7, 122.8, 122.9, 122.8, 122.8, 123, 122.8, 122.2,
];

const m2 = [
  122.8, 122.9, 123, 123, 123.1, 122.5, 123.1, 123.1, 123.2, 123.1, 123, 122.5,
  123.1, 123.3, 123.2, 123.4, 123.3, 123.3, 123.4, 123.4, 123.4, 123.3, 123.4,
  123.4, 123.6, 123.5, 123.4, 123.4, 123.2, 123.2, 122.7, 123.3, 123.2, 123.4,
  123.4, 123.3, 122.9, 123.6, 123.5, 123.6, 123.6, 123.4, 123.3, 123.4, 123.4,
  123.5, 123.6, 123.6, 123.4, 123.2, 123.2, 123.2, 123.2, 123.1, 122.9, 122.9,
  122.9, 122.8, 122.6, 122.6, 122.4, 121.3, 121.5, 121.2, 121.2, 122.4, 122.4,
  121.7, 122.3, 122.3, 122.1, 122, 122, 122.1, 122.5, 122.4, 122.3, 122.2,
  122.1, 121.9, 122, 121.8, 121.9, 121.9, 121.3, 121.1, 121, 121, 121, 120.9,
  120.3, 120.1, 121.6, 121.4, 121.3, 121.3, 121, 121, 120.5, 120.8, 120.6,
  120.6, 120.4, 120.5, 119.7, 119.9, 119.9, 120.1, 120.3, 120.3, 119.3, 119.6,
  119.9, 119.9, 119.8, 119.9, 119.4, 119.2, 119.1, 119.6, 119.9, 119.8, 119.7,
  119.7, 118.9, 119.6, 119.4, 119.4, 119.2, 119.8, 118.8, 119, 119.7, 119.4,
  119.2, 119.4, 119.6, 118.8, 119.4, 119.3, 119.2, 119.4, 119, 119.6, 120.2,
  120.2, 120.2, 120.4, 120.7, 119.1, 120.6, 119.4, 120.8, 121, 120.2, 120.1,
  121.2, 120.9, 121.2, 119.5, 120.9, 120.7, 121, 121, 121.3, 121.5, 121, 120.7,
  121.2, 120.7, 120.8, 120.7, 120.2, 120.2, 120.8, 120.9, 121.1, 120.9, 121.2,
  121.3, 120.6, 121, 121.5, 121.6, 121.4, 120.9, 121, 121.3, 121.2, 121, 121.4,
  121.3, 121.6, 121.4, 121.9, 121.8, 122, 122.1, 122, 122.1, 121.5, 122.4,
  122.2, 122.4, 122.8, 122.5, 122, 122.9, 122.8, 123.2, 123.2, 122.2, 122.2,
  121.2, 121.1, 121.9, 120.4, 122.1, 122.3, 122.3, 120, 122.3, 122.5, 122.5,
  122.2, 122.4, 121.5, 120.5, 122.5, 122.2, 122.5, 122.4, 122.4, 121.8, 122.2,
  122.4, 122.6, 121.3, 122.1, 122.2, 122.9, 123.1, 123.1, 123.1, 123.2, 122.7,
  123.5, 123.4, 122.7, 122.4, 122.6, 121.1, 120.8, 121.3, 121.3, 121.5, 121.8,
  121.8, 121.3, 121.9, 122.2, 122.2, 122.3, 122.5, 122, 122, 122.2, 122.4,
  122.3, 122.5, 122.6, 122.6, 122.7, 122.7, 122.8, 122.6, 122.5, 122.4, 122.4,
  122.6, 122.6, 122.7, 122.8, 120.6, 122.8, 122.9, 122.8,
];

const m3 = [
  125.5, 125.4, 125.4, 125.3, 125.4, 125.5, 125.5, 125.6, 125.6, 125.7, 125.6,
  125.6, 125.7, 125.9, 125.8, 125.7, 125.8, 125.8, 125.7, 125.8, 125.9, 125.9,
  125.8, 125.8, 126, 125.9, 125.9, 126, 125.9, 126, 126.1, 126.1, 126.1, 126.1,
  126, 126, 126.1, 125.9, 126, 126, 126, 125.9, 125.9, 126, 125.9, 125.9, 125.9,
  125.9, 125.8, 125.8, 125.7, 125.7, 125.7, 125.6, 125.5, 125.4, 125.3, 125.4,
  125, 125.2, 124.8, 124.5, 124.1, 124, 124.2, 125.3, 124.8, 125.1, 124.8,
  124.9, 124.8, 124.7, 124.3, 124.3, 124.8, 124.7, 124.6, 124.6, 124.3, 124.2,
  124.3, 124.2, 123.9, 124, 123.8, 123.5, 123.6, 123.3, 123.2, 122.9, 123.6,
  123.4, 124.1, 123.8, 123.7, 123.7, 123.5, 123.4, 123.6, 122.9, 123.1, 123,
  122.9, 122.8, 122.7, 122.7, 122.5, 122.9, 122.6, 122.5, 122.6, 122.8, 122.3,
  122.6, 122.4, 122.4, 122.4, 122.2, 121.8, 121.7, 121.8, 121.9, 121.7, 122,
  121.9, 121.9, 121.8, 121.8, 121.6, 122.3, 122, 122.1, 121.7, 121.8, 121.8,
  122, 121.9, 121.8, 121.8, 121.6, 121.8, 121.7, 121.8, 121.8, 122.6, 122.5,
  122.7, 122.8, 123.3, 122.8, 122.8, 123.9, 122.7, 123.6, 122.9, 123.2, 123.4,
  123.2, 123.2, 123.5, 124.1, 123.2, 123.5, 123.4, 123.5, 123.6, 123.4, 123.4,
  123.1, 123, 123.3, 123, 123.4, 123.5, 123.3, 123.4, 123.5, 123.2, 123.4,
  123.5, 123.6, 123.6, 123.7, 123.6, 123.4, 123.6, 123.7, 124, 123.7, 123.7,
  123.8, 124, 123.8, 124.1, 124.2, 124.1, 124.1, 124, 124, 124.2, 124.1, 124.4,
  124.3, 124.5, 124.7, 124.8, 124.9, 124.9, 125.2, 125.3, 124.3, 124.4, 124.3,
  124.3, 124.1, 124.3, 124.5, 124.3, 124.4, 124.5, 124.6, 124.6, 124.6, 124.7,
  124.5, 124.5, 124.5, 124.5, 124.8, 124.6, 124.8, 124.8, 124.9, 125, 124.7,
  125, 124.9, 124.9, 125, 125.4, 125.3, 125.5, 125.4, 125.5, 125.5, 125.9,
  125.6, 126.1, 124.9, 124.6, 125.1, 123.6, 123.8, 123.8, 123.8, 123.9, 124,
  124, 124.2, 124.2, 124.5, 124.4, 124.5, 124.7, 124.9, 124.3, 124.7, 124.8,
  124.7, 124.9, 124.9, 125.1, 125.2, 125.1, 125.3, 125.2, 125.2, 124.9, 124.7,
  124.9, 124.9, 125, 125.2, 125, 125, 125.2, 125.2, 124.5,
];

const m1db = [];
let startTime = 1730486400000; // Timestamp inicial
for (let i = 0; i < 100; i++) {
  const nextInterval = Math.floor(Math.random() * 3000) + 60000; // Intervalo de 1 a 3 segundos
  startTime += nextInterval;
  m1db.push({ x: startTime, y: Math.floor(Math.random() * 50) + 300 }); // Valor entre 200 y 250
}

const m2db = [];
startTime = m1db[m1db.length - 1].x;
for (let i = 0; i < 100; i++) {
  const nextInterval = Math.floor(Math.random() * 3000) + 60000; // Intervalo de 1 a 3 segundos
  startTime += nextInterval;

  // 20% de probabilidad de coincidencia en tiempo con data1
  if (Math.random() < 0.2 && m1db[i]) {
    m2db.push({ x: m1db[i].x, y: Math.floor(Math.random() * 50) + 300 }); 
  } else {
    m2db.push({ x: startTime, y: Math.floor(Math.random() * 50) + 300 }); 
  }
}

const m3db = [];
startTime = m1db[m1db.length - 1].x; 
for (let i = 0; i < 100; i++) {
  const nextInterval = Math.floor(Math.random() * 3000) + 60000; // Intervalo de 1 a 3 segundos
  startTime += nextInterval;

  // 10% de probabilidad de coincidencia en tiempo con data1
  if (Math.random() < 0.1 && m1db[i]) {
    m3db.push({ x: m1db[i].x, y: Math.floor(Math.random() * 50) + 300 }); // Valor entre 230 y 300
  } else {
    m3db.push({ x: startTime, y: Math.floor(Math.random() * 50) + 300}); // Valor entre 230 y 300
  }
}

export default { m1, m2, m3, m1db, m2db, m3db };
